# SConstruct for src/pool

# -------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

Import('sched_env')
import os

lib_name='scheduler_sched'

source_files=['Scheduler.cc' , 'SchedulerTemplate.cc']

# Build library
sched_env.StaticLibrary(lib_name, source_files)

# Build daemon
sched_env.Prepend(LIBS=[
    'scheduler_sched',
    'scheduler_pool',
    'nebula_vmgroup_roles',
    'nebula_log',
    'nebula_client',
    'nebula_acl',
    'nebula_pool',
    'nebula_xml',
    'nebula_common',
    'nebula_core',
    'nebula_template',
    'nebula_vm',
    'nebula_host',
    'crypto',
    'xml2'
])

if not sched_env.GetOption('clean'):
    sched_env.ParseConfig(("LDFLAGS='%s' ../../../../share/scons/get_xmlrpc_config client") % (os.environ['LDFLAGS'],))

sched_env.Program('mm_sched.cc')
