#!/usr/bin/env ruby

# ---------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                  #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License"); you may      #
# not use this file except in compliance with the License. You may obtain      #
# a copy of the License at                                                     #
#                                                                              #
# http://www.apache.org/licenses/LICENSE-2.0                                   #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
# ---------------------------------------------------------------------------- #

ONE_LOCATION = ENV['ONE_LOCATION'] unless defined?(ONE_LOCATION)

if !ONE_LOCATION
    RUBY_LIB_LOCATION = '/usr/lib/one/ruby' unless defined?(RUBY_LIB_LOCATION)
else
    RUBY_LIB_LOCATION = ONE_LOCATION + '/lib/ruby' unless defined?(RUBY_LIB_LOCATION)
end

$LOAD_PATH << RUBY_LIB_LOCATION
$LOAD_PATH << File.dirname(__FILE__)

require 'vcenter_driver'

vm_ref          = ARGV[2]
vc_cluster_name = ARGV[-1]

host    = VCenterDriver::VIHelper.find_by_name(OpenNebula::HostPool,
                                               vc_cluster_name)
host_id = host['ID']

begin
    vi_client = VCenterDriver::VIClient.new_from_host(host_id)
    vm        = VCenterDriver::VirtualMachine.new_without_id(vi_client, vm_ref)

    vm.poweron
    vm.set_running(true)
rescue StandardError => e
    message = "Restore of VM #{vm_ref} on vCenter cluster "\
              "#{vc_cluster_name} failed due to "\
              "\"#{e.message}\"."
    OpenNebula.log_error(message)
    STDERR.puts "#{message} #{e.backtrace}" if VCenterDriver::CONFIG[:debug_information]

    exit(-1)
ensure
    vi_client.close_connection if vi_client
end
