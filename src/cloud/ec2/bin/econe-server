#! /bin/sh

# -------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

if [ -z "$ONE_LOCATION" ]; then
    ECONE_PID=/var/run/one/econe-server.pid
    ECONE_SERVER=/usr/lib/one/ruby/cloud/econe/econe-server.rb
    ECONE_LOCK_FILE=/var/lock/one/.econe.lock
    ECONE_LOG=/var/log/one/econe-server.log
    ECONE_LOG_ERROR=/var/log/one/econe-server.error
    ECONE_ETC=/etc/one/econe.conf
else
    ECONE_PID=$ONE_LOCATION/var/econe-server.pid
    ECONE_SERVER=$ONE_LOCATION/lib/ruby/cloud/econe/econe-server.rb
    ECONE_LOCK_FILE=$ONE_LOCATION/var/.econe.lock
    ECONE_LOG=$ONE_LOCATION/var/econe-server.log
    ECONE_LOG_ERROR=$ONE_LOCATION/var/econe-server.error
    ECONE_ETC=$ONE_LOCATION/etc/econe.conf
fi

setup()
{
    TMPDIR=$(grep ^:tmpdir: $ECONE_ETC|awk '{print $2}')

    if [ -n "$TMPDIR" ]; then
        export TMPDIR
        mkdir -p $TMPDIR
    fi

    if [ -f $ECONE_LOCK_FILE ]; then
        if [ -f  $ECONE_PID ]; then
            ECONEPID=`cat $ECONE_PID`
            ps $ECONEPID > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                echo "econe-server is still running (PID:$ECONEPID). Please try 'econe-server stop' first."
                exit 1
            fi
        fi
        echo "Stale .lock detected. Erasing it."
        rm $ECONE_LOCK_FILE
    fi
}

start()
{
    if [ ! -f "$ECONE_SERVER" ]; then
        echo "Cannot find $ECONE_SERVER."
        exit 1
    fi

    touch $ECONE_LOCK_FILE

    # Start the econe-server daemon
    ruby $ECONE_SERVER >$ECONE_LOG 2>$ECONE_LOG_ERROR &

    LASTRC=$?
    LASTPID=$!

    if [ $LASTRC -ne 0 ]; then
        echo "Error executing econe-server."
        echo "Check $ECONE_LOG_ERROR and $ECONE_LOG for more information"
        exit 1
    else
        echo $LASTPID > $ECONE_PID
    fi

    sleep 2
    ps $LASTPID > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "Error executing econe-server."
        echo "Check $ECONE_LOG_ERROR and $ECONE_LOG for more information"
        exit 1
    fi

    echo "econe-server started"
}

#
# Function that stops the daemon/service
#
stop()
{
    if [ ! -f $ECONE_PID ]; then
        echo "Couldn't find econe-server process pid."
        exit 1
    fi

    # Kill the econe-server daemon

    kill -INT `cat $ECONE_PID` > /dev/null 2>&1

    # Remove pid files

    rm -f $ECONE_PID > /dev/null 2>&1
    rm -f $ECONE_LOCK_FILE > /dev/null 2>&1

    echo "econe-server stopped"
}


case "$1" in
  start)
    setup
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    setup
    start
    ;;
  *)
    echo "Usage: econe-server {start|stop|restart}" >&2
    exit 3
    ;;
esac





