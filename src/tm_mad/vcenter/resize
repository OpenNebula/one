#!/usr/bin/env ruby

# ---------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                  #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License"); you may      #
# not use this file except in compliance with the License. You may obtain      #
# a copy of the License at                                                     #
#                                                                              #
# http://www.apache.org/licenses/LICENSE-2.0                                   #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
# ---------------------------------------------------------------------------- #

# resize image size vmid

ONE_LOCATION ||= ENV['ONE_LOCATION']

if !ONE_LOCATION
    RUBY_LIB_LOCATION ||= '/usr/lib/one/ruby'
    GEMS_LOCATION     ||= '/usr/share/one/gems'
else
    RUBY_LIB_LOCATION ||= ONE_LOCATION + '/lib/ruby'
    GEMS_LOCATION     ||= ONE_LOCATION + '/share/gems'
end

Gem.use_paths(GEMS_LOCATION) if File.directory?(GEMS_LOCATION)

$LOAD_PATH << RUBY_LIB_LOCATION
$LOAD_PATH << File.dirname(__FILE__)

require 'vcenter_driver'

src          = ARGV[0]
new_size     = ARGV[1]
vmid         = ARGV[2]

check_valid src, 'src'
check_valid new_size, 'new_size'
check_valid vmid, 'vmid'

disk_id = src.split('.')[-1]
hostname, = src.split ':'

# Get host ID
host = VCenterDriver::VIHelper.find_by_name(OpenNebula::HostPool, hostname)
host_id = host['ID']

# Get OpenNebula VM
one_vm = VCenterDriver::VIHelper.one_item(OpenNebula::VirtualMachine, vmid)
vm_ref = one_vm['DEPLOY_ID']

begin
    vi_client = VCenterDriver::VIClient.new_from_host(host_id)
    vm = VCenterDriver::VirtualMachine.new(vi_client, vm_ref, vmid)

    # Cannot resize if VM has snapshots
    if vm.has_snapshots?
        raise "'disk-resize' operation not supported for VMs with snapshots."
    end

    disk = vm.disk(disk_id)
    disk.change_size(new_size)

    vm.resize_disk(disk)
rescue StandardError => e
    message = "Error resizing disk #{disk_id} for VM #{one_vm['NAME']} "\
              "Reason: #{e.message}."
    OpenNebula.log_error(message)
    if VCenterDriver::CONFIG[:debug_information]
        STDERR.puts "#{message} #{e.backtrace}"
    end
    exit(-1)
ensure
    vi_client.close_connection if vi_client
end
