#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2023, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# mvds host:remote_system_ds/disk.i fe:SOURCE vmid dsid
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - dsid is the target datastore (0 is the system datastore)

SRC=$1
DST=$2
VMID=$3

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../etc/datastore/ceph/ceph.conf

CEPH_UTILS=${DRIVER_PATH}/../../datastore/ceph/ceph_utils.sh

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_PATH=$(arg_path $SRC)
SRC_HOST=$(arg_host $SRC)
RBD_SRC=$(arg_path $SRC)

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

DISK_ID=$(echo "$RBD_SRC" | $AWK -F. '{print $NF}')

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VMID| $XPATH \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/SOURCE \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/CEPH_USER \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/CEPH_KEY \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/CEPH_CONF \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/SIZE \
                    /VM/TEMPLATE/DISK\[DISK_ID=$DISK_ID\]/ORIGINAL_SIZE \
                    /VM/HISTORY_RECORDS/HISTORY\[last\(\)\]/VM_MAD \
                    /VM/LCM_STATE)

RBD_SRC="${XPATH_ELEMENTS[j++]}"
CEPH_USER="${XPATH_ELEMENTS[j++]}"
CEPH_KEY="${XPATH_ELEMENTS[j++]}"
CEPH_CONF="${XPATH_ELEMENTS[j++]}"
SIZE="${XPATH_ELEMENTS[j++]}"
ORIGINAL_SIZE="${XPATH_ELEMENTS[j++]}"
VM_MAD="${XPATH_ELEMENTS[j++]}"
LCM_STATE="${XPATH_ELEMENTS[j++]}"

#-------------------------------------------------------------------------------
# Copy Image back to the datastore
#-------------------------------------------------------------------------------

if [ "${LCM_STATE}" = '26' ] && [ "${VM_MAD}" != "kvm" ]; then
    error_message "mvds.ssh: Live operation not supported on ${VM_MAD}"
    exit 1
fi

# Undeployed
if is_undeployed "$VMID" "$SRC_HOST"; then
    error_message "mvds.ssh: Operation not supported on undeployed/stopped"
    exit 1
fi

QEMU_OPTS=''

if [ -n "$CEPH_USER" ]; then
    RBD="$RBD --id ${CEPH_USER}"
    QEMU_OPTS="${QEMU_OPTS}:id=${CEPH_USER}"
fi

if [ -n "$CEPH_KEY" ]; then
    RBD="$RBD --keyfile ${CEPH_KEY}"
    QEMU_OPTS="${QEMU_OPTS}:keyfile=${CEPH_KEY}"
fi

if [ -n "$CEPH_CONF" ]; then
    RBD="$RBD --conf ${CEPH_CONF}"
    QEMU_OPTS="${QEMU_OPTS}:conf=${CEPH_CONF}"
fi

MVDS_CMD=$(cat <<EOF
    RBD="${RBD}"

    set -e -o pipefail

    if [ -n "$ORIGINAL_SIZE" -a "$SIZE" -gt "$ORIGINAL_SIZE" ]; then
        $RBD resize $RBD_SRC --size $SIZE
    fi

    ${QEMU_IMG} convert -n \
        -f raw "${SRC_PATH}" \
        -O rbd "rbd:${RBD_SRC}${QEMU_OPTS}"

    rm -f ${SRC_PATH}
EOF
)

ssh_exec_and_log_stdin "$SRC_HOST" "$MVDS_CMD" "$CEPH_UTILS" \
                 "Error copying $RBD_SRC to $DST in $SRC_HOST" #??
