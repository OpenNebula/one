resource "aws_vpc" "device_<%= obj['ID'] %>" {
    cidr_block = "<%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"

    tags = {
        Name = "<%= obj['NAME'] %>_vpc"
    }
}

resource "aws_subnet" "device_<%= obj['ID'] %>" {
    vpc_id     = aws_vpc.device_<%= obj['ID'] %>.id
    cidr_block = "<%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"

    map_public_ip_on_launch = true

    tags = {
        Name = "<%= obj['NAME'] %>_subnet"
    }
}

resource "aws_internet_gateway" "device_<%= obj['ID'] %>" {
    vpc_id = aws_vpc.device_<%= obj['ID'] %>.id

    tags = {
        Name = "<%= obj['NAME'] %>_gateway"
    }
}

resource "aws_route" "device_<%= obj['ID'] %>" {
    route_table_id         = aws_vpc.device_<%= obj['ID'] %>.main_route_table_id
    destination_cidr_block = "0.0.0.0/0"
    gateway_id             = aws_internet_gateway.device_<%= obj['ID'] %>.id
}

resource "aws_security_group" "device_<%= obj['ID'] %>_all" {
  name        = "allow_all"
  description = "Allow all traffic"
  vpc_id     = aws_vpc.device_<%= c['ID'] %>.id

  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "device_<%= obj['ID'] %>_all"
  }
}

#
# Find below how to provision Security Groups on AWS
# (see host.rb how to apply them to instances)
#
#resource "aws_security_group" "device_<%= obj['ID'] %>_ssh" {
#  name        = "allow_ssh"
#  description = "Allow SSH inbound traffic"
#  vpc_id     = aws_vpc.device_<%= c['ID'] %>.id
#
#  ingress {
#    description = "SSH from all"
#    from_port   = 22
#    to_port     = 22
#    protocol    = "tcp"
#    cidr_blocks = ["0.0.0.0/0"]
#  }
#
#  egress {
#    from_port   = 0
#    to_port     = 0
#    protocol    = "-1"
#    cidr_blocks = ["0.0.0.0/0"]
#  }
#
#  tags = {
#    Name = "device_<%= obj['ID'] %>_ssh"
#  }
#}
#
#resource "aws_security_group" "device_<%= obj['ID'] %>_bgp" {
#  name        = "allow_bgp"
#  description = "Allow BGP inbound traffic"
#  vpc_id     = aws_vpc.device_<%= c['ID'] %>.id
#
#  ingress {
#    description = "BGP from <%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"
#    from_port   = 179
#    to_port     = 179
#    protocol    = "tcp"
#    cidr_blocks = ["<%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"]
#  }
#
#  egress {
#    from_port   = 0
#    to_port     = 0
#    protocol    = "-1"
#    cidr_blocks = ["0.0.0.0/0"]
#  }
#
#  tags = {
#    Name = "device_<%= obj['ID'] %>_bgp"
#  }
#}
#
#resource "aws_security_group" "device_<%= obj['ID'] %>_vxlan" {
#  name        = "allow_vxlan"
#  description = "Allow VXLAN inbound traffic"
#  vpc_id     = aws_vpc.device_<%= c['ID'] %>.id
#
#  ingress {
#    description = "VXLAN from <%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"
#    from_port   = 8472
#    to_port     = 8472
#    protocol    = "udp"
#    cidr_blocks = ["<%= provision['CIDR'] ? provision['CIDR'] : '10.0.0.0/16'%>"]
#  }
#
#  egress {
#    from_port   = 0
#    to_port     = 0
#    protocol    = "-1"
#    cidr_blocks = ["0.0.0.0/0"]
#  }
#
#  tags = {
#    Name = "device_<%= obj['ID'] %>_vxlan"
#  }
#}

