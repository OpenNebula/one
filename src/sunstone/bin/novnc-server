#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# -------------------------------------------------------------------------- #
# Copyright 2002-2023, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

ONE_LOCATION = ENV['ONE_LOCATION']

if !ONE_LOCATION
    LOG_LOCATION      = '/var/log/one'
    VAR_LOCATION      = '/var/lib/one'
    SHARE_LOCATION    = '/usr/share/one'
    ETC_LOCATION      = '/etc/one'
    RUBY_LIB_LOCATION = '/usr/lib/one/ruby'
    SUNSTONE_ROOT_DIR = '/usr/lib/one/sunstone'
    GEMS_LOCATION     = '/usr/share/one/gems'
else
    VAR_LOCATION      = ONE_LOCATION + '/var'
    LOG_LOCATION      = ONE_LOCATION + '/var'
    SHARE_LOCATION    = ONE_LOCATION + '/share'
    ETC_LOCATION      = ONE_LOCATION + '/etc'
    RUBY_LIB_LOCATION = ONE_LOCATION + '/lib/ruby'
    SUNSTONE_ROOT_DIR = ONE_LOCATION + '/lib/sunstone'
    GEMS_LOCATION     = ONE_LOCATION + '/share/gems'
end

VNC_LOG                   = LOG_LOCATION + "/novnc.log"
CONFIGURATION_FILE        = ETC_LOCATION + "/sunstone-server.conf"
PLUGIN_CONFIGURATION_FILE = ETC_LOCATION + "/sunstone-plugins.yaml"

# %%RUBYGEMS_SETUP_BEGIN%%
if File.directory?(GEMS_LOCATION)
    real_gems_path = File.realpath(GEMS_LOCATION)
    if !defined?(Gem) || Gem.path != [real_gems_path]
        $LOAD_PATH.reject! {|l| l =~ /vendor_ruby/ }

        # Suppress warnings from Rubygems
        # https://github.com/OpenNebula/one/issues/5379
        begin
            verb = $VERBOSE
            $VERBOSE = nil
            require 'rubygems'
            Gem.use_paths(real_gems_path)
        ensure
            $VERBOSE = verb
        end
    end
end
# %%RUBYGEMS_SETUP_END%%

$LOAD_PATH << RUBY_LIB_LOCATION
$LOAD_PATH << RUBY_LIB_LOCATION + '/cloud'
$LOAD_PATH << SUNSTONE_ROOT_DIR
$LOAD_PATH << SUNSTONE_ROOT_DIR + '/models'

require 'logger'
require 'yaml'
require 'sunstone_vnc'

$log=Logger.new(VNC_LOG)


begin
    conf = YAML.load_file(CONFIGURATION_FILE)
rescue Exception => e
    STDERR.puts "Error parsing config file #{CONFIGURATION_FILE}: #{e.message}"
    exit 1
end

vnc=SunstoneVNC.new(conf, $log)

if ARGV[0]
    res=case ARGV[0].downcase.to_sym
    when :start
        vnc.start
    when :stop
        vnc.stop
    when :restart
        vnc.stop
        sleep 1
        vnc.start
    when :status
        vnc.status
    end

    if !res
        STDERR.puts "Error, check #{VNC_LOG}"
        exit(-1)
    end
else
    exit(-1)
end
