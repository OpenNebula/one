#!/usr/bin/env ruby

# ---------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                  #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License"); you may      #
# not use this file except in compliance with the License. You may obtain      #
# a copy of the License at                                                     #
#                                                                              #
# http://www.apache.org/licenses/LICENSE-2.0                                   #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
# ---------------------------------------------------------------------------- #

###############################################################################
# This script is used retrieve the file size of a disk
###############################################################################

ONE_LOCATION=ENV["ONE_LOCATION"] if !defined?(ONE_LOCATION)

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby" if !defined?(RUBY_LIB_LOCATION)
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby" if !defined?(RUBY_LIB_LOCATION)
end

$: << RUBY_LIB_LOCATION
$: << File.dirname(__FILE__)

require 'vcenter_driver'

drv_action_enc = ARGV[0]
id             = ARGV[1]

drv_action =OpenNebula::XMLElement.new
drv_action.initialize_xml(Base64.decode64(drv_action_enc), 'DS_DRIVER_ACTION_DATA')

ds_ref  = drv_action["/DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VCENTER_DS_REF"]
ds_id   = drv_action["/DS_DRIVER_ACTION_DATA/DATASTORE/ID"]
img_path = drv_action["/DS_DRIVER_ACTION_DATA/IMAGE/PATH"]

check_valid ds_ref, "ds_ref"
check_valid img_path, "img_path"

if img_path.start_with? "vcenter://"
    begin
        vi_client = VCenterDriver::VIClient.new_from_datastore(ds_id)

        ds = VCenterDriver::Datastore.new_from_ref(ds_ref, vi_client)

        puts ds.stat(img_path.sub("vcenter://",""))

    rescue Exception => e
        message = "Error calculating image #{img_path} size."\
                  " Reason: \"#{e.message}\"\n#{e.backtrace}"
        STDERR.puts error_message(message)
        exit -1
    ensure
        vi_client.close_connection if vi_client
    end
else
    cmd = "#{File.dirname(__FILE__)}/../fs/stat #{drv_action_enc}"
    system(cmd)
end
