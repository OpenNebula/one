#!/usr/bin/env ruby

# ---------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                  #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License"); you may      #
# not use this file except in compliance with the License. You may obtain      #
# a copy of the License at                                                     #
#                                                                              #
# http://www.apache.org/licenses/LICENSE-2.0                                   #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
# ---------------------------------------------------------------------------- #

###############################################################################
# This script is used retrieve the file size of a disk
###############################################################################

ONE_LOCATION=ENV["ONE_LOCATION"] if !defined?(ONE_LOCATION)

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby" if !defined?(RUBY_LIB_LOCATION)
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby" if !defined?(RUBY_LIB_LOCATION)
end

$: << RUBY_LIB_LOCATION
$: << File.dirname(__FILE__)

require 'opennebula'

drv_action_enc = ARGV[0]
id             = ARGV[1]

drv_action = OpenNebula::XMLElement.new
drv_action.initialize_xml(Base64.decode64(drv_action_enc), 'DS_DRIVER_ACTION_DATA')

img_source = drv_action["/DS_DRIVER_ACTION_DATA/IMAGE/SOURCE"]
img_size   = drv_action["/DS_DRIVER_ACTION_DATA/IMAGE/SIZE"]
md5        = drv_action["/DS_DRIVER_ACTION_DATA/IMAGE/TEMPLATE/MD5"]

md5 = md5.nil? ? "-" : md5

ds_id = drv_action["/DS_DRIVER_ACTION_DATA/DATASTORE/ID"]

if img_source.nil?
    message = "Not enough information to export the image,"\
              " missing image source."
    STDERR.puts error_message(message)
    exit -1
end

# Create vcenter url with all needed information to extract the file from
# the vCenter datastore

vcenter_url_img = "vcenter://#{img_source}?"\
                  "param_dsid=#{ds_id}"

# Create import info document for marketplace import script

puts "<IMPORT_INFO>
        <IMPORT_SOURCE><![CDATA[#{vcenter_url_img}]]></IMPORT_SOURCE>
        <MD5><![CDATA[#{md5}]]></MD5>
        <SIZE><![CDATA[#{img_size}]]></SIZE>
        <FORMAT>VMDK</FORMAT>
        <DISPOSE>NO</DISPOSE>
</IMPORT_INFO>"
