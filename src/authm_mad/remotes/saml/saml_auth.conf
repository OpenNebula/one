# -------------------------------------------------------------------------- #
# Global Service Provider (SP) Configuration                                 #
# -------------------------------------------------------------------------- #
# The unique identifier for this OpenNebula instance as a Service Provider.
# This exact value must be configured in each Identity Provider (IdP) that
# you connect (e.g., as the Client ID in Keycloak or Audience URI in Okta).
# It is used to validate the 'Audience' in the SAML assertion.
:sp_entity_id: 'your-opennebula-sp-entity-id'

# -------------------------------------------------------------------------- #
# Assertion Consumer Service (ACS) URL                                       #
# -------------------------------------------------------------------------- #
# The endpoint where OpenNebula receives SAML assertions.
# This value must exactly match the 'Recipient' URL that the IdP
# includes in the SAML assertion, preventing SAML redirect attacks
:acs_url: 'https://your-opennebula-domain.com/fireedge/api/auth/acs'

# -------------------------------------------------------------------------- #
# Identity Provider (IdP) Definitions                                        #
# -------------------------------------------------------------------------- #
# A map containing the configuration for each trusted Identity Provider,
# where the key is the name of the provider.
:identity_providers:
  :keycloak_idp:
    # The 'issuer' is a unique identifier for the Identity Provider.
    # This value from the SAML assertion's <saml:Issuer> element is used
    # to find the correct configuration block.
    # Example: "https://your-keycloak-domain.com/realms/your-realm"
    :issuer: 'https://your-keycloak-domain.com/realms/your-realm'

    # The X.509 public key certificate of the Identity Provider.
    # This is used to verify the signature of the SAML assertion.
    # The certificate should be in PEM format, without the -----BEGIN...
    # and -----END... lines, and on a single line.
    :idp_cert: 'MIID...your...IdP...cert...here...A=='

    # Field in the SAML assertion that contains the username.
    # By default, the driver will use the content of the <saml:NameID> element.
    :user_field: 'NameID'

    # Field in the SAML assertion that contains the group membership information.
    # This should correspond to an <saml:Attribute> with the Name specified here.
    # Default is 'member'.
    :group_field: 'member'

    # If set, SAML users must belong to this group in order to be allowed access to
    # OpenNebula. If not set, any valid SAML user will be granted access. If that's
    # the case and no group membership is reported, the ONE group ID defined in
    # :mapping_default will be used.
    # :group_required: 'one-users'

    # --- Group Mapping Configuration ---

    # If 'true', the driver will automatically generate a group mapping file
    # from the information in the OpenNebula groups template. This is similar to the
    # LDAP driver's functionality.
    :mapping_generate: true

    # Key from the OpenNebula group template to map to a SAML group.
    # Only relevant if mapping_generate is true
    :mapping_key: 'SAML_GROUP'

    # Group mapping mode. Triggers IDP-dependant logic.
    # Used to support specific IDP features (e.g. group nesting in Keycloak)
    # Possible values:
    # strict   => strict mapping between the group names reported by the IdP and
    #             the ones in the mapping file.
    # keycloak => handles Keycloak full group path syntax, supporting group nesting
    #             E.g. A user member of /group1/subgroup1 is considered both member
    #                  of group1 and member of subgroup1.
    :mapping_mode: 'keycloak'

    # Time in seconds that a mapping file will be considered valid before
    # it is regenerated. Only relevant if mapping_generate is true
    :mapping_timeout: 300

    # The name of the group mapping file, which will be stored in
    # OpenNebula's var directory ( /var/lib/one ).
    # If mapping_generate is true, this file will be automatically created and
    # populated.
    :mapping_filename: 'keycloak_groups.yaml'

    # The default OpenNebula group ID to assign to a user if none of their SAML
    # groups is found in the mapping file.
    :mapping_default: 1

    # Name of a group from the Identity Provider. If a user is a member of this group,
    # they will be granted admin rights for ALL their mapped OpenNebula groups.
    :group_admin_name: '/opennebula-admins'
  :okta_idp:
    :issuer: 'https://your-okta-domain.com/app/your-app-id/sso/saml'
    :idp_cert: 'MIID...your...IdP...cert...here...A=='
    :user_field: 'NameID'
    :group_field: 'member'
    # :group_required: 'opennebula-users'
    :mapping_generate: true
    :mapping_key: 'OKTA_GROUP'
    :mapping_mode: 'strict'
    :mapping_timeout: 300
    :mapping_filename: 'okta_groups.yaml'
    :mapping_default: 1
    :group_admin_name: 'okta-opennebula-admins'