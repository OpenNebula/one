# SConstruct for src/pool

# -------------------------------------------------------------------------- #
# Copyright 2002-2023, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

Import('mon_env')
import os

# This is the absolute path where the project is located
cwd=os.getcwd()

# Build library
lib_name='nebula_monitor'
source_files=[
    'Monitor.cc',
    'MonitorConfigTemplate.cc',
    'OneMonitorDriver.cc',
    'HostMonitorManager.cc',
    'MonitorDriverProtocol.cc'
]

mon_env.StaticLibrary(lib_name, source_files)

# Build daemon
mon_env.Prepend(LIBS=[
    'nebula_monitor',
    'nebula_data_model',
    'nebula_protocol',
    'nebula_host',
    # 'nebula_group',
    # 'nebula_acl',
    # 'nebula_rm',
    # 'nebula_um',
    'nebula_template',
    'nebula_vm',
    'nebula_pool',
    'nebula_log',
    'nebula_common',
    'nebula_client',
    'nebula_xml',
    'nebula_parsers',
    'nebula_sql',
    'nebula_sql_const',
    'crypto',
#    'xml2'
])

if not mon_env.GetOption('clean'):
    env_xmlrpc_flags = "LDFLAGS='%s' CXXFLAGS='%s' CPPFLAGS='%s'" % (
                       os.environ.get('LDFLAGS', ''),
                       os.environ.get('CXXFLAGS', ''),
                       os.environ.get('CPPFLAGS', ''))

    mon_env.ParseConfig("%s ../../../../share/scons/get_xmlrpc_config client" % (
                        env_xmlrpc_flags,))

mon_env.Program('onemonitord.cc')
