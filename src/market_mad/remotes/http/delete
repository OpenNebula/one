#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
# -------------------------------------------------------------------------- #

###############################################################################
# This script is used to import a file into the marketplace. The source file
# is an opaque representation of an OpenNebula object, like a image file or a
# tar.gz with several vm template or flow disk images
###############################################################################

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../datastore/libfs.sh

UTILS_PATH="${DRIVER_PATH}/../../datastore"

# -------- Get arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="$UTILS_PATH/xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /MARKET_DRIVER_ACTION_DATA/MARKETPLACEAPP/SOURCE \
                    /MARKET_DRIVER_ACTION_DATA/MARKETPLACE/TEMPLATE/BASE_URL \
                    /MARKET_DRIVER_ACTION_DATA/MARKETPLACE/TEMPLATE/BRIDGE_LIST \
                    /MARKET_DRIVER_ACTION_DATA/MARKETPLACE/TEMPLATE/PUBLIC_DIR)
unset i

SOURCE="${XPATH_ELEMENTS[i++]}"
BASE_URL="${XPATH_ELEMENTS[i++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[i++]}"
PUBLIC_DIR="${XPATH_ELEMENTS[i++]}"

# ----------------- Delete the app source from public folder -------------------
APPNAME=${SOURCE##${BASE_URL}}
DST_PATH="${PUBLIC_DIR}/${APPNAME}"

if [ -n "$BRIDGE_LIST" ]; then
    DST_HOST=`get_destination_host $ID`

    ssh_exec_and_log "${DST_HOST}" "[ -f ${DST_PATH} ] && rm -rf ${DST_PATH}" \
        "Error deleting ${DST_PATH} in ${DST_HOST}"
else
    if [ -f ${DST_PATH} ]
    then
        log "Removing ${DST_PATH} from the marketplace"

        exec_and_log "rm -rf ${DST_PATH}" "Error deleting ${DST_PATH}"
    else
        log_error "Bad formed or unavailable app source: ${DST_PATH}"
        exit 1
    fi
fi
